Task1:- nested if
----------------->

*The nested if statement represents the if block within another if block. Here, the inner if block condition executes only when outer if block condition is true

*Genarally this condtion works like yes (or) No type if the condition satisfies, it executes some block of code. Otherwise, it doesnâ€™t execute the code


Program:

class NestedIf
{   
    public static void main(String args[]) 
    { 
          int a=10; 
          int b=20; 
        
        if(a==10){ 
  
            if(b!=20){ 
                System.out.println("Successfully executes"); //Here inner if the condition is not true. Hence else part is executed.
            } 
            
            else{ 
                System.out.println("Execution Failed"); 
            } 
        } 
    } 
} 

Output:
-------
Execution Failed

==================================================================================================================================================================================

Task2: when for loop becomes infinite.

class infiniteLoop
{
  public static void main(String args[])
  {
    for(;;)
     {
       System.out.println("Java is Awesome");
     }
}


Output:-
--------
Java is awesome
java is awesome
java is awesome
.
.
.
Infinite times


==An infinite loop occurs when a condition always evaluates to true. ===========================================================================================================================================================================

Task3:-Finding Prime Numbers upto n. n is an integer?

*A number is a prime number if its only factors are 1 and itself. 

ex:2,3,5,7,11


class PrimeNumber{

 public static void main(String[] args)
{
 int i,n,count, j;
      n= 10;
      System.out.printf("Enter the n value is "+ n);
      System.out.printf("\nPrime numbers between 1 to n are ", n);
      for(j=2;j<=n;j++){
         count=0;
         for(i=1;i<=j;i++){
            if(j%i==0){
               count++;
            }
         }
         if(count==2)
         System.out.print(j+" ");
      }

}
}
===================================================================================================================================================================================

Task4:-Write a program for the below mentioned scenario

534 ==> 53+4=57
524 ==> 52+4=56
183 ==> 18+3=21




public class SumOfDigits{
   
 public static void main(String[] args){

  int[] num = {534, 524 , 183 , 293, 181};
		
		for(int val :num)
		{
			int digit1 = val /10 ;      //  ==val/10 is divides the number by 10, this shifts all digits to right and removes the last digit 

			int digit2 = val % 10 ;     //  ==val%10 when you divide the number by 10. So it is actually the last digit of the number	
			

                        int sum  = digit1 + digit2 ;
                        
                        System.out.print("Sum of the digits"+"  "+ num +"==>" + digit1 + "+" + digit2 + "==>" + sum  );
                        
                        int di1=sum/10;
                        int di2=sum%10;
                        
                        int sum1=di1+di2;
                        

                       System.out.println("   "+" second Sum of the digits"+"  "+ num +"==>" + di1 + "+" + di2 + "==>" + sum1 );
			
		}


		
	}
	    }
}
}
		
=======================================================================================================================================================================
